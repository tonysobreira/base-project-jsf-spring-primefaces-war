<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:c="http://www.springframework.org/schema/c"
		xmlns:flow="http://www.springframework.org/schema/webflow-config"
		xmlns:jee="http://www.springframework.org/schema/jee" 
		xmlns:jms="http://www.springframework.org/schema/jms"
		xmlns:lang="http://www.springframework.org/schema/lang" 
		xmlns:osgi="http://www.springframework.org/schema/osgi"
		xmlns:p="http://www.springframework.org/schema/p" 
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:util="http://www.springframework.org/schema/util" 
		xmlns:sec="http://www.springframework.org/schema/security"
	
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/webflow-config
		http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
        http://www.springframework.org/schema/jms
        http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
        http://www.springframework.org/schema/lang
        http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
        http://www.springframework.org/schema/osgi
        http://www.springframework.org/schema/osgi/spring-osgi-1.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<context:annotation-config />
	
	<context:component-scan base-package="br.com.controlefinanceiro;" />
	
	<tx:annotation-driven/>
		
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="org.postgresql.Driver" />
		
		<property name="jdbcUrl" value="jdbc:postgresql://ec2-54-152-185-191.compute-1.amazonaws.com:5432/dscnvgiskubmn?useSSL=true"/>
		<property name="user" value="gcgxoejxrpymid" />
		<property name="password" value="db1151c99cd6a0737d184a0b43500065bd1ffa50a9f039542c78503ea8b5db00" />
		
		<property name="minPoolSize" value="3" />
	    <property name="maxPoolSize" value="30" />
	    <property name="acquireIncrement" value="1" />
	    <property name="maxStatementsPerConnection" value="15" />
	    <property name="idleConnectionTestPeriod" value="3000" />
	    <property name="loginTimeout" value="300" />
	</bean>
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="pu" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect" />
				<property name="showSql" value="true" />
			</bean>
		</property>
		<property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
<!--                 <prop key="hibernate.hbm2ddl.auto">update</prop> -->
            </props>
        </property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<sec:http auto-config="true">
		<!-- hasRole, hasAnyRole
			 hasAuthority, hasAnyAuthority
			 permitAll, denyAll
			 isAnonymous, isRememberMe, isAuthenticated, isFullyAuthenticated
			 principal, authentication
			 hasPermission -->
		<sec:intercept-url pattern="/publico/**" access="permitAll()"/>
		<sec:intercept-url pattern="/restrito/**" access="isAuthenticated()"/>
		<sec:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/> 
		
		<sec:form-login 
			login-page="/publico/login.xhtml"
			login-processing-url="/login"
			default-target-url="/"
			authentication-failure-url="/publico/login.xhtml?error=true"
			always-use-default-target="true" 
			username-parameter="email"
			password-parameter="senha"
			authentication-success-forward-url="/restrito/paginainicial.xhtml"
		/>
		
		<sec:csrf disabled="true"/>
		<sec:logout logout-url="/logout" logout-success-url="/publico/login.xhtml"/>
		<sec:access-denied-handler error-page="/publico/acessonegado.xhtml"/>
		
		<sec:headers>
			<sec:frame-options disabled="true"/>
		</sec:headers>
		
<!-- 		<sec:intercept-url pattern="/css/**" access="permitAll()"/> -->
<!-- 		<sec:intercept-url pattern="/js/**" access="permitAll()"/> -->
<!-- 		<sec:intercept-url pattern="/**" access="isAuthenticated()"/> -->
	</sec:http>
	
	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider>
			<sec:jdbc-user-service 
				data-source-ref="dataSource"
				users-by-username-query="select email, senha, ativo from cf_usuario where email = ?"
				authorities-by-username-query="select u.email, p.nome from cf_usuario u inner join cf_usuario_permissao up on (u.pkusuario = up.fkusuario) inner join cf_permissao p on (up.fkpermissao = p.pkpermissao) where u.email = ?"
			/>
			<sec:password-encoder ref="passwordEncoder" />
		</sec:authentication-provider>
	</sec:authentication-manager>

	<!-- Encoder padrÃ£o do Spring Security -->
	<!-- <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"> -->
	<!-- <constructor-arg value="4" /> -->
	<!-- </bean> -->

	<bean id="passwordEncoder" class="br.com.controlefinanceiro.util.CustomPasswordEncoder">
		
	</bean>
	
	

</beans>
